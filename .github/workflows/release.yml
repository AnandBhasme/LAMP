name: Build and Release Executables

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:  # This allows manual triggering

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m venv venv
        if [[ "$RUNNER_OS" == "Windows" ]]; then
          .\venv\Scripts\activate
        else
          source venv/bin/activate
        fi
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Build executable
      run: |
        source venv/bin/activate
        pyinstaller --onefile app.py

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: executable-${{ matrix.os }}
        path: dist/

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Download artifacts
      uses: actions/download-artifact@v2
      with:
        name: executable-${{ matrix.os }}
        path: ./dist

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/app
        asset_name: app-${{ matrix.os }}.exe
        asset_content_type: application/octet-stream